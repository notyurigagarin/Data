/*markdown
## Diagramming and Creating the Database
*/

/*markdown
 - A small, online store that has 3 salespeople
 - They're planning to expand an hire more people, but not to change infraestructure
 - The payments are done via an external website, no credit card data is stored and the promotions are applied automatically in the final price. There is no need for a calculated column
 
 Creating the schemes according to the our current business model:
*/

CREATE SCHEMA Product;
GO
CREATE SCHEMA Sales;
GO
CREATE SCHEMA HR;
GO

/*markdown
Creating a simple dbo Tables for City and Countries information:
*/

CREATE TABLE Countries(
	[CountryID] INT PRIMARY KEY NOT NULL,
	[Name] VARCHAR (40)
)

CREATE TABLE Cities(
	[CityID] INT PRIMARY KEY NOT NULL,
	[Name] VARCHAR (40)
)

CREATE TABLE CountryCity(
	[CountryID] INT FOREIGN KEY REFERENCES Countries(CountryID),
	[CityID] INT FOREIGN KEY REFERENCES Cities(CityID)
)

/*markdown
Creating the tables for Product schema:
*/

CREATE TABLE Product.Fact(
	[ProductID] INT PRIMARY KEY NOT NULL,
	[DocumentID] INT UNIQUE NOT NULL
)

CREATE TABLE Product.Docs(
	[DocumentID] INT PRIMARY KEY NOT NULL,
	[ProductID] INT FOREIGN KEY REFERENCES Product.Fact(ProductID),
)

CREATE TABLE Product.Info(
	[ProductID] INT FOREIGN KEY REFERENCES Product.Fact(ProductID),
	[Active] BIT,
	[Name] VARCHAR (45) UNIQUE,
	[Category] VARCHAR (20),
	[Description] VARCHAR (200),
	[Color] VARCHAR (20),
	[Cost] SMALLINT,
	[Tax] SMALLINT,
	[Price] SMALLINT,
	[Weight] SMALLINT,
	[Height] SMALLINT,
	[Lenght] SMALLINT,
	[Depth] SMALLINT
)

CREATE TABLE Product.Inv(
	[ProductID] INT FOREIGN KEY REFERENCES Product.Fact(ProductID),
	[Shelf] SMALLINT,
	[Bin] SMALLINT,
	[Quantity] SMALLINT
)

CREATE TABLE Product.Promotions(
	[PromotionID] INT PRIMARY KEY NOT NULL,
	[ProductID] INT FOREIGN KEY REFERENCES Product.Fact(ProductID),
	[Name] VARCHAR(50) UNIQUE,
	[Description] VARCHAR(200),
	[Coupon Code] SMALLINT, -- The coupon generated by the website upon starting a new campaign
	[Start Date] SMALLINT,
	[End Date] SMALLINT,
	[New Price]	SMALLINT
)

/*markdown
Creating the tables for HR schema:
*/

CREATE TABLE HR.People(
	[PersonID] INT PRIMARY KEY NOT NULL,
	[Active] BIT,
	[Name] VARCHAR(20),
	[Last Name] VARCHAR(30),
	[Gender] CHAR(3),
	[Department] VARCHAR(20),
	[Email] VARCHAR(100),
	[Phone] SMALLINT,
	[Birthday] DATE,
	[CityID] INT FOREIGN KEY REFERENCES Cities(CityID),
	[CountryID] INT FOREIGN KEY REFERENCES Countries(CountryID),
	[Hired Date] DATE,
	[Fired Date] DATE,
	[Vacation Hours] TINYINT,
	[Salary] SMALLINT
)

/*markdown
Creating the tables for Sales schema:
*/

CREATE TABLE Sales.Customer(
	[CustomerID] INT PRIMARY KEY NOT NULL,
	[Name] VARCHAR(50),
	[Last Name] VARCHAR(100),
	[CountryID] INT FOREIGN KEY REFERENCES Countries(CountryID),
	[CityID] INT FOREIGN KEY REFERENCES Cities(CityID),
	[Main Address] VARCHAR(100),
	[Second Address] VARCHAR(100),
	[ZIP Code] SMALLINT,
	[Last Purchase] DATE,
	[PurchaseAmounts] TINYINT -- clientÂ´s recurrency
)

CREATE TABLE Sales.Salespeople(
	[SalesPersonID] INT PRIMARY KEY NOT NULL, 
	[PersonID] INT FOREIGN KEY REFERENCES HR.People(PersonID),
	[Sales Quota] TINYINT, --percentages
	[Bonus] TINYINT, --percentages
	[Commission] TINYINT --percentages
)

CREATE TABLE Sales.OrderDetail( --orders are done through a website, info is sent to the DB and ocmplimented to what we already have
	[OrderID] INT PRIMARY KEY NOT NULL,
	[CustomerID] INT FOREIGN KEY REFERENCES Sales.Customer(CustomerID), -- web info
	[ProductID] INT FOREIGN KEY REFERENCES Product.Fact(ProductID), -- web info
	[Quantity] TINYINT, -- web info
	[Unit Price] SMALLINT, --db info
	[Website Code] SMALLINT, -- web info, the order code from the website
	[Website Coupons] VARCHAR (200) -- web info, the coupons applied in this purchase, in form of names
)

CREATE TABLE Sales.Fact(
	[OrderID] INT FOREIGN KEY REFERENCES Sales.OrderDetail(OrderID),
	[CustomerID] INT FOREIGN KEY REFERENCES Sales.Customer(CustomerID),
	[Status] VARCHAR(20), -- Payment Approved | In Construction | In Packaging | In Shipping | Delivered
	[Promotion Code] INT FOREIGN KEY REFERENCES Product.Promotions(PromotionID), -- Aggregation of all discount coupons, if more than one
	[Order Price] SMALLINT, -- Calculated column with the final price
	[Order Date] DATE,
	[Shipment Date] DATE,
	[Shipment Cost] TINYINT,
	[Shipping Code] SMALLINT,
	[Payment Method] VARCHAR(20),
	[SalesPersonID] INT FOREIGN KEY REFERENCES Sales.Salespeople(SalesPersonID)
)

/*markdown
Creating the first diagram (Diagram v1.png in folder)
*/

/*markdown
## Columnstore Indexes
*/

CREATE COLUMNSTORE INDEX IX_CS_SalesFact 
ON Sales.Fact ([OrderID], [CustomerID], [Status], [Promotion Code], [Order Price], 
[Order Date], [Shipment Date], [Shipment Cost], [Shipping Code], [Payment Method], 
[SalesPersonID])

CREATE COLUMNSTORE INDEX IX_CS_SalesOrderDetail 
ON Sales.OrderDetail ([OrderID], [CustomerID], [ProductID], [Quantity], [Unit Price],
[Website Code], [Website Coupons])

CREATE COLUMNSTORE INDEX IX_CS_SalesCustomer
ON Sales.Customer ([CustomerID], [Name], [Last Name], [CountryID], [CityID], [Main Address], 
[Second Address], [ZIP Code], [Last Purchase], [PurchaseAmounts])

CREATE COLUMNSTORE INDEX IX_CS_ProductInfo
ON Product.Info ([ProductID], [Active], [Name], [Category], [Description], [Color], 
[Cost], [Tax], [Price], [Weight], [Height], [Lenght], [Depth])

/*markdown
## ETL, Data Insertion
This part will be ommited since my computer struggles with one spreadsheet alone, not to mention creating hundreds of data out of my creativity for dozens of oters, but regardless, the data import in this case could be done AFTER the data transformation inside Excel itself, via a SQL code + CSV:
*/

BULK INSERT dbo.Actors
FROM 'C:\Documents\Yuri\csv-to-mssql\actor.csv'
WITH
    (FORMAT='CSV',
    FIRSTROW=2
    )

-- no truncate necessary given that the table is already empty

/*markdown
Or via the Object Explorer: 1) Find the target database (Company_DB), 2) Right click -> Tasks -> Import Data, 3) Select 'Flat File Source' in Data Source, 4) Select the file and configure the columns by going to advanced and making sure every setting corresponds to what was coded inside SQL Server, 5) Specify the database target and then edit mappings for a final check, click next all the way til the end
*/